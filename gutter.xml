<application>
  <component name="LineMarkerSettings">
    <option name="providers">
      <map>
        <entry key="GrpcRunRequestGutterProvider" value="true" />
        <entry key="RenderedDoc" value="true" />
        <entry key="RetrofitOpenInHttpClientLineMarkerProvider" value="true" />
        <entry key="SwOpenInHttpClientLineMarkerProvider" value="true" />
        <entry key="com.baomidou.plugin.idea.mybatisx.provider.StatementLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.ExternalAnnotationLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.InferredContractAnnotationsLineMarkerProvider" value="false" />
        <entry key="com.intellij.codeInsight.InferredNullabilityAnnotationsLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.daemon.impl.IconLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.daemon.impl.RecursiveCallLineMarkerProvider" value="true" />
        <entry key="com.intellij.execution.lineMarker.RunLineMarkerProvider" value="true" />
        <entry key="com.intellij.httpClient.http.request.codeInsight.HttpRequestDiffLineMarkerProvider" value="true" />
        <entry key="com.intellij.javaee.application.JavaeeAppConfigLineMarkerProvider" value="true" />
        <entry key="com.intellij.javaee.web.module.view.web.WebClassesLineMarkerProvider" value="true" />
        <entry key="com.intellij.javaee.web.module.view.web.WebXmlLineMarkerProvider" value="true" />
        <entry key="com.intellij.jpa.highlighting.JpaClassLineMarkerProvider" value="true" />
        <entry key="com.intellij.jpa.highlighting.JpaConfigLineMarkerProvider" value="true" />
        <entry key="com.intellij.lang.javascript.highlighting.JSRecursiveCallLineMarkerProvider" value="true" />
        <entry key="com.intellij.lang.javascript.highlighting.TypeScriptSourceMappingLineMarkerProvider" value="true" />
        <entry key="com.intellij.nosql.providers.NoSqlLineMarkerProvider" value="true" />
        <entry key="com.intellij.sql.editor.SqlRecursiveCallLineMakerProvider" value="true" />
        <entry key="com.intellij.ui.ColorLineMarkerProvider" value="true" />
        <entry key="java.implemented" value="true" />
        <entry key="java.implementing" value="true" />
        <entry key="java.lambda" value="false" />
        <entry key="java.overridden" value="true" />
        <entry key="java.overriding" value="true" />
        <entry key="java.service" value="true" />
        <entry key="java.sibling.inherited" value="true" />
        <entry key="js.implemented" value="true" />
        <entry key="js.implementing" value="true" />
        <entry key="js.overridden" value="true" />
        <entry key="js.overriding" value="true" />
        <entry key="kotlin.actual" value="true" />
        <entry key="kotlin.dsl" value="true" />
        <entry key="kotlin.expect" value="true" />
        <entry key="kotlin.implemented" value="true" />
        <entry key="kotlin.implementing" value="true" />
        <entry key="kotlin.overridden" value="true" />
        <entry key="kotlin.overriding" value="true" />
        <entry key="org.editorconfig.configmanagement.editor.EditorConfigPreviewMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.editor.images.ConfigureHtmlImageLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.editor.images.ConfigureMarkdownImageLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.editor.images.ConfigureTextHtmlImageLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.extensions.common.plantuml.PlantUMLCodeFenceDownloadLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.extensions.jcef.mermaid.MermaidCodeFenceDownloadLineMarkerProvider" value="true" />
        <entry key="scala.companion" value="true" />
        <entry key="scala.implemented" value="true" />
        <entry key="scala.implementing" value="true" />
        <entry key="scala.overridden" value="true" />
        <entry key="scala.overriding" value="true" />
        <entry key="scala.recursion" value="true" />
        <entry key="scala.sam" value="true" />
      </map>
    </option>
  </component>
</application>